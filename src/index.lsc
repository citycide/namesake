got = require('got')
muse = require('datamuse')
isAvailable = require('npm-name')
kebab = require('just-kebab-case')

getRandomWord () ->
  got('http://randomword.setgetgo.com/get.php')
    .then(result => result.body)

ensureWord (word) ->
  if word and typeof word == 'string':
    return Promise.resolve(word)

  getRandomWord().then(ensureWord)

getWordList (starter) ->
  ensureWord(starter)
    .then(ml => muse.words({ ml }))
    .then(data =>
      if !data or !data.length:
        return getWordList()

      data.map(o => kebab(o.word))
    )

getAvailableNames (keyword) ->
  getWordList(keyword).then(words =>
    Promise.all(words.map(isAvailable)).then(availables =>
      words.filter((word, i) => availables[i])
    )
  )

shuffle (array) ->
  clone = array.slice()
  { floor, random } = Math
  let randomIndex, temporary

  for elem value, idx i in clone:
    now randomIndex = floor(random() * i)
    now temporary = value
    clone[i] = clone[randomIndex]
    clone[randomIndex] = temporary

  clone

module.exports = namesake (keyword, options) ->
  now options = Object.assign({}, options)
  { limit } = options

  getAvailableNames(keyword).then(names =>
    shuffled = shuffle(names)
    limit ? shuffled.slice(0, limit) : shuffled
  )
